.field {
	margin: 5px;
	display: block;

	.label,
	.input,
	.select {
		display: block;
	}
}

.label,
.input,
.radio {

	// Align images with text in the middle of the line
	svg,
	img {
		max-width: 100%;
		vertical-align: middle;
	}

	img {
		height: 1em;
	}

	svg {
		height: 2em;
	}
}

.input,
select,
.select option {
	height: 2.5em;
	padding: 0.5em;
	position: relative;
	transition: var(--input-transition-out);
	font-family: inherit;
	border: none;
	color: rgba(var(--btn-primary-text));

	&::placeholder {
		color: rgba(var(--input-placeholder));
	}

	&:hover {
		transition: var(--input-transition-in);
	}

	&:focus,
	&:focus-within,
	&:focus-visible,
	&:active {
		transition: var(--input-transition-in);
	}

}

.input {
	background: transparent;
	border-bottom: 2px solid rgba(var(--input-border));

	&:hover {
		border-color: rgba(var(--input-border-hover));
	}

	&:focus,
	&:focus-within,
	&:focus-visible,
	&:active {
		border-color: rgba(var(--input-border-active));
	}
}

.select,
.text {
	background: rgba(var(--input-bg));
	// Used to align selects with inputs
	border-bottom: 2px solid transparent;

	&:hover {
		background: rgba(var(--input-bg-hover));
	}

	&:focus,
	&:focus-within,
	&:focus-visible,
	&:active {
		background: rgba(var(--input-bg-active));
	}
}

.select,
.select option {
	&:hover {
		cursor: pointer;
	}
}

.label,
.checkbox {
	vertical-align: middle;
}

input[type="checkbox"].checkbox {
	position: relative;
	width: 1.5em;
	height: 1.5em;
	color: white;
	border: 1px solid gray;
	appearance: none;
	outline: 0;
	cursor: pointer;
	transition: background 175ms cubic-bezier(0.1, 0.1, 0.25, 1);

	// Checkmark symbol
	&::before {
		position: absolute;
		content: '';
		display: block;
		width: 0.5em;
		height: 0.9em;
		left: 0.4em;
		border-style: solid;
		border-color: #fff;
		border-width: 0 2px 2px 0;
		transform: rotate(45deg);
		opacity: 0;
	}

	&:checked {
		background: #06842c;

		// Checkmark symbol
		&::before {
			opacity: 1;
		}
	}
}

.textarea {
	font-family: inherit;
	resize: both;
	padding: 10px;
	background: rgba(var(--input-bg));
	color: rgba(var(--btn-primary-text));
	border:none;
	// No transition to avoid delay during resizing

	&:hover {
		background: rgba(var(--input-bg-hover));
		transition: var(--input-transition-in);
	}

	&:focus,
	&:focus-within,
	&:focus-visible,
	&:active {
		background: rgba(var(--input-bg-active));
		// No transition to avoid delay during resizing
	}

}
